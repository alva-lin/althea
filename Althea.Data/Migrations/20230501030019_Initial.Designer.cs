// <auto-generated />
using System;
using Althea.Data;
using Althea.Infrastructure.EntityFrameworkCore.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Althea.Data.Migrations
{
    [DbContext(typeof(AltheaDbContext))]
    [Migration("20230501030019_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Althea.Data.Domains.ChatDomain.Chat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DeletableAudit>("Audit")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("LastSendTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Own")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.Property<int>("TotalUsage")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Chat", (string)null);
                });

            modelBuilder.Entity("Althea.Data.Domains.ChatDomain.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DeletableAudit>("Audit")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.Property<long?>("PrevMessageId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Usage")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("PrevMessageId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("Althea.Data.Domains.ChatDomain.RequestLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<BasicAudit>("Audit")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompletionId")
                        .HasColumnType("bigint");

                    b.Property<int>("CompletionUsage")
                        .HasColumnType("integer");

                    b.Property<string>("ErrorInfo")
                        .HasColumnType("text");

                    b.Property<int>("PromptUsage")
                        .HasColumnType("integer");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("CompletionId")
                        .IsUnique();

                    b.ToTable("RequestLog", (string)null);
                });

            modelBuilder.Entity("MessageRequestLog", b =>
                {
                    b.Property<long>("PromptsId")
                        .HasColumnType("bigint");

                    b.Property<long>("PromptsLogId")
                        .HasColumnType("bigint");

                    b.HasKey("PromptsId", "PromptsLogId");

                    b.HasIndex("PromptsLogId");

                    b.ToTable("MessageRequestLog");
                });

            modelBuilder.Entity("Althea.Data.Domains.ChatDomain.Message", b =>
                {
                    b.HasOne("Althea.Data.Domains.ChatDomain.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Althea.Data.Domains.ChatDomain.Message", "PrevMessage")
                        .WithMany("NextMessages")
                        .HasForeignKey("PrevMessageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Chat");

                    b.Navigation("PrevMessage");
                });

            modelBuilder.Entity("Althea.Data.Domains.ChatDomain.RequestLog", b =>
                {
                    b.HasOne("Althea.Data.Domains.ChatDomain.Chat", "Chat")
                        .WithMany("Logs")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Althea.Data.Domains.ChatDomain.Message", "Completion")
                        .WithOne("CompletionLog")
                        .HasForeignKey("Althea.Data.Domains.ChatDomain.RequestLog", "CompletionId");

                    b.Navigation("Chat");

                    b.Navigation("Completion");
                });

            modelBuilder.Entity("MessageRequestLog", b =>
                {
                    b.HasOne("Althea.Data.Domains.ChatDomain.Message", null)
                        .WithMany()
                        .HasForeignKey("PromptsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Althea.Data.Domains.ChatDomain.RequestLog", null)
                        .WithMany()
                        .HasForeignKey("PromptsLogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Althea.Data.Domains.ChatDomain.Chat", b =>
                {
                    b.Navigation("Logs");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Althea.Data.Domains.ChatDomain.Message", b =>
                {
                    b.Navigation("CompletionLog");

                    b.Navigation("NextMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
